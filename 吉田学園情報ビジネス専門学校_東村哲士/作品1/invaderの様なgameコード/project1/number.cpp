//=============================================================================
//
// ナンバー処理 [number.cpp]
// Author : 佐藤 諒佳
//
//=============================================================================

//*****************************************************************************
// インクルードファイル
//*****************************************************************************
#include "number.h"
#include "manager.h"

//*****************************************************************************
// 静的メンバ変数宣言
//*****************************************************************************
LPDIRECT3DTEXTURE9 CNumber::m_pTexture = NULL;

//=============================================================================
// numberのコンストラクタ
//=============================================================================
CNumber::CNumber()
{

}

//=============================================================================
// numberのデストラクタ
//=============================================================================
CNumber::~CNumber()
{

}

//=============================================================================
// テクスチャをロード
//=============================================================================
HRESULT CNumber::Load(void)
{
	// デバイスの取得
	LPDIRECT3DDEVICE9 pDevice;
	pDevice = CManager::GetRenderere()->GetDevice();

	// テクスチャの生成
	D3DXCreateTextureFromFile(pDevice, "texture/number000.png", &m_pTexture);

	return S_OK;
}

//=============================================================================
// クリエイト関数
//=============================================================================
CNumber *CNumber::Create(D3DXVECTOR3 pos, D3DXVECTOR3 siz)
{
	CNumber *pNumber;
	pNumber = new CNumber;
	pNumber->Init(pos, siz);

	return pNumber;
}

//=============================================================================
// 初期化処理
//=============================================================================
HRESULT CNumber::Init(D3DXVECTOR3 pos, D3DXVECTOR3 siz)
{
	m_pScene2d = CScene2d::Create(CManager::PRIORITY_SCORE);
	m_pScene2d->Init();
	m_pScene2d->SetCOL(D3DCOLOR_RGBA(255, 255, 255, 255));
	m_pScene2d->SetPOS(pos);
	m_pScene2d->SetSIZ(siz);
	m_pScene2d->SetTexture(m_pTexture);
	m_pScene2d->SetTex(0.1f, FALSE_MOVEMENT, 0);

	return S_OK;
}

//=============================================================================
// 終了処理
//=============================================================================
void CNumber::Uninit(void)
{
	m_pScene2d->Uninit();
}

//=============================================================================
// 更新処理
//=============================================================================
void CNumber::Update(void)
{
	m_pScene2d->Update();
}

//=============================================================================
// 描画処理
//=============================================================================
void CNumber::Draw(void)
{
	m_pScene2d->Draw();
}

//=============================================================================
// セットナンバー
//=============================================================================
void CNumber::SetNumber(int nNumber)
{
	m_pScene2d->SetTex(0.1f, FALSE_MOVEMENT, nNumber);
}

//=============================================================================
// テクスチャをアンロード
//=============================================================================
void CNumber::UnLoad(void)
{
	// テクスチャの破棄
	if (m_pTexture != NULL)
	{
		m_pTexture->Release();
		m_pTexture = NULL;
	}
}